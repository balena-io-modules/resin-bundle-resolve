{"version":3,"sources":["../src/resolvers/dockerfileTemplate.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AAEpC,0DAA0D;AAI1D;IAAA;QACQ,aAAQ,GAAG,CAAC,CAAC;QACb,SAAI,GAAG,qBAAqB,CAAC;QAE5B,0BAAqB,GAAG,KAAK,CAAC;IAoCvC,CAAC;IAjCO,KAAK,CAAC,IAAc;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,qBAAqB,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACnC,CAAC;IACF,CAAC;IAEM,WAAW,CAAC,OAAe;QACjC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;IACnC,CAAC;IAEM,OAAO,CAAC,MAAc;QAC5B,MAAM,UAAU,GAAa;YAC5B,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;SACxB,CAAC;QAGF,MAAM,IAAI,GAAyC;YAClD,UAAU,EAAE,MAAM,CAAC,YAAY;YAC/B,kBAAkB,EAAE,MAAM,CAAC,UAAU;SACrC,CAAC;QAEF,MAAM,CAAC,IAAI,OAAO,CAAa,OAAO,CAAC,EAAE;YAExC,UAAU,CAAC,QAAQ,GAAG,IAAI,MAAM,CAC/B,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CACjE,CAAC;YACF,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7C,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AAxCD,6CAwCC","file":"dockerfileTemplate.js","sourcesContent":["import * as Promise from 'bluebird';\n\nimport * as DockerfileTemplate from 'dockerfile-template';\n\nimport { Bundle, FileInfo, Resolver } from '../resolver';\n\nexport default class DockerfileTemplateResolver implements Resolver {\n\tpublic priority = 2;\n\tpublic name = 'Dockerfile.template';\n\n\tprivate hasDockerfileTemplate = false;\n\tprivate templateContent: Buffer;\n\n\tpublic entry(file: FileInfo): void {\n\t\tif (file.name === 'Dockerfile.template') {\n\t\t\tthis.templateContent = file.contents;\n\t\t\tthis.hasDockerfileTemplate = true;\n\t\t}\n\t}\n\n\tpublic isSatisfied(_bundle: Bundle): boolean {\n\t\treturn this.hasDockerfileTemplate;\n\t}\n\n\tpublic resolve(bundle: Bundle): Promise<FileInfo[]> {\n\t\tconst dockerfile: FileInfo = {\n\t\t\tname: 'Dockerfile',\n\t\t\tsize: 0,\n\t\t\tcontents: new Buffer(''),\n\t\t};\n\n\t\t// Generate the variables to replace\n\t\tconst vars: DockerfileTemplate.TemplateVariables = {\n\t\t\tRESIN_ARCH: bundle.architecture,\n\t\t\tRESIN_MACHINE_NAME: bundle.deviceType,\n\t\t};\n\n\t\treturn new Promise<FileInfo[]>(resolve => {\n\t\t\t// FIXME: submit a PR to DockerfileTemplate to take Buffers as an input\n\t\t\tdockerfile.contents = new Buffer(\n\t\t\t\tDockerfileTemplate.process(this.templateContent.toString(), vars),\n\t\t\t);\n\t\t\tdockerfile.size = dockerfile.contents.length;\n\t\t\tresolve([dockerfile]);\n\t\t});\n\t}\n}\n"],"sourceRoot":"../src"}