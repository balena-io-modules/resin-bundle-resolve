{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,6BAA6B;AAW7B,2BAAkC,IAAY;IAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACxC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IACD,MAAM,CAAC,UAAU,CAAC;AACnB,CAAC;AAND,8CAMC;AAOD,wBAA+B,MAA6B;IAC3D,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC9C,IAAI,MAAM,GAAW,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACJ,CAAC;AAPD,wCAOC","file":"utils.js","sourcesContent":["import * as Promise from 'bluebird';\nimport * as path from 'path';\n\n/**\n * normalizeTarEntry: Depending on how the tar archive was created,\n * filenames can be presented in several different forms, and this function\n * aims to make them all similar, for example;\n *  * ./Dockerfile -> Dockerfile\n *  * /Dockerfile -> Dockerfile\n *  * Dockerfile -> Dockerfile\n *  * ./a/b/Dockerfile -> a/b/Dockerfile\n */\nexport function normalizeTarEntry(name: string): string {\n\tconst normalized = path.normalize(name);\n\tif (path.isAbsolute(normalized)) {\n\t\treturn normalized.substr(normalized.indexOf(path.sep) + 1);\n\t}\n\treturn normalized;\n}\n\n/**\n * streamToBuffer: Given a stream, read it into a buffer\n * @param stream\n * @param size\n */\nexport function streamToBuffer(stream: NodeJS.ReadableStream): Promise<Buffer> {\n\treturn new Promise<Buffer>((resolve, reject) => {\n\t\tlet buffer: Buffer = new Buffer('');\n\t\tstream.on('data', (data: Buffer) => (buffer = Buffer.concat([buffer, data])));\n\t\tstream.on('end', () => resolve(buffer));\n\t\tstream.on('error', reject);\n\t});\n}\n"],"sourceRoot":"src"}