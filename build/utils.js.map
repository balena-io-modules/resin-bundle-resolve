{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";;AAAA,oCAAmC;AACnC,6BAA4B;AAE5B;;;;;;;;GAQG;AACH,2BAAkC,IAAY;IAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IACvC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;IACvD,CAAC;IACD,MAAM,CAAC,UAAU,CAAA;AACnB,CAAC;AAND,8CAMC;AAED;;;;GAIG;AACH,wBAA+B,MAA6B;IAC1D,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM;QACzC,IAAI,MAAM,GAAW,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA;QACnC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY,KAAK,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;QAC3E,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA;QACvC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,wCAOC","file":"utils.js","sourcesContent":["import * as Promise from 'bluebird'\nimport * as path from 'path'\n\n/**\n * normalizeTarEntry: Depending on how the tar archive was created,\n * filenames can be presented in several different forms, and this function\n * aims to make them all similar, for example;\n *  * ./Dockerfile -> Dockerfile\n *  * /Dockerfile -> Dockerfile\n *  * Dockerfile -> Dockerfile\n *  * ./a/b/Dockerfile -> a/b/Dockerfile\n */\nexport function normalizeTarEntry(name: string): string {\n  const normalized = path.normalize(name)\n  if (path.isAbsolute(normalized)) {\n    return normalized.substr(normalized.indexOf('/') + 1)\n  }\n  return normalized\n}\n\n/**\n * streamToBuffer: Given a stream, read it into a buffer\n * @param stream \n * @param size \n */\nexport function streamToBuffer(stream: NodeJS.ReadableStream): Promise<Buffer> {\n  return new Promise<Buffer>((resolve, reject) => {\n    let buffer: Buffer = new Buffer('')\n    stream.on('data', (data: Buffer) => buffer = Buffer.concat([buffer, data]))\n    stream.on('end', () => resolve(buffer))\n    stream.on('error', reject)\n  });\n}"],"sourceRoot":"src"}